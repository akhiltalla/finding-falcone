{"version":3,"sources":["components/DropDown/DropDown.js","components/Main/Main.js","components/Header/Header.js","components/Footer/Footer.js","components/Result/Result.js","App.js","reducers/myReducer.js","index.js"],"names":["DropDown","props","handleChange","e","target","value","state","dropDownSelectedValue","fArray","finalArray","some","item","name","index","i","length","splice","updateFinalArray","setState","radioSelectedValue","calculateTime","radioHandler","vehicles","distance","planets","filter","planet","map","max_distance","vehicle","speed","obj","vehicle_name","vehicle_speed","planet_name","person","push","alert","createDropDown","data","key","createRadioList","type","checked","onChange","total_no","console","log","Fragment","className","this","Component","connect","dispatch","payload","Main","totalTime","onClick","config","method","url","headers","Accept","token","planet_names","vehicle_names","Axios","then","getResult","catch","error","history","dataHasBeenLoaded","showLoader","get","initializeVehicles","setTimeout","disabled","color","height","width","timeout","Header","class","Footer","href","Result","componentDidMount","resultData","status","App","exact","path","component","myReducer","iState","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7ca1c11.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './dropdown.css';\n\nclass DropDown extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            dropDownSelectedValue: null,\n            radioSelectedValue: null\n        }\n    }\n\n    handleChange = (e)=>{\n        if(e.target.value!==this.state.dropDownSelectedValue){\n            let fArray = this.props.finalArray;\n            if(fArray.some(item=>item.name===this.props.name)){\n                let index;\n                for(let i=0;i<fArray.length;i++){\n                    if(fArray[i].name===this.props.name){\n                        index = i;\n                    }\n                }\n            fArray.splice(index,1);\n            this.props.updateFinalArray(fArray);\n            this.setState({radioSelectedValue: null}) \n            this.props.calculateTime(this.props.finalArray);\n        }}\n        this.setState({ dropDownSelectedValue: e.target.value })\n    }\n    \n    radioHandler = (e)=>{\n        let {vehicles, planets} = this.props;\n        let distance = ((planets.filter(planet=>planet.name===this.state.dropDownSelectedValue))\n                        .map(item => item.distance))[0];\n        let max_distance = ((vehicles.filter(vehicle=>vehicle.name===e.target.value)\n                        .map(item => item.max_distance)))[0];\n        let speed = ((vehicles.filter(vehicle=>vehicle.name===e.target.value)\n                    .map(item => item.speed)))[0];\n\n        if(max_distance >= distance){\n            this.setState({radioSelectedValue: e.target.value});\n            let obj = {\n                    name: this.props.name,\n                    vehicle_name: e.target.value,\n                    vehicle_speed: speed,\n                    distance: distance,\n                    planet_name: this.state.dropDownSelectedValue\n                }\n            let fArray = this.props.finalArray;\n            if(fArray.some(person=>person.name===this.props.name)){\n                let index;\n                for(let i=0;i<fArray.length;i++){\n                    if(fArray[i].name===this.props.name){\n                        index = i;\n                    }\n                }\n                fArray[index] = obj;\n            }\n            else{\n                fArray.push(obj);\n            }\n            this.props.updateFinalArray(fArray);\n            this.props.calculateTime(this.props.finalArray);\n        }\n        else{\n            alert(\"can't select this one\");\n        }\n    }\n\n    createDropDown = (data)=>{\n        let elements = data.map((item, index) => {\n            return (\n                <option key={index}>{item.name}</option>\n            )\n        })\n        return elements;\n    }\n\n    createRadioList = (data)=>{\n        let elements = data.map((item, index) => {\n            return (\n                <li key={index}>\n                    <input type='radio' name={this.props.name} value={item.name} checked={item.name===this.state.radioSelectedValue} onChange={e => this.radioHandler(e)} />\n                    <label>{item.name} ({item.total_no})</label>\n                </li>  \n            )\n        });\n        return elements;\n    }\n\n    render() {\n        console.log('render of dropdown');\n        return (\n            <React.Fragment>\n                <select className='drop-down-list' onChange={e => this.handleChange(e)}>\n                    <option>select</option>\n                    {this.createDropDown(this.props.planets)}\n                </select>\n                <div className='radio-container'>\n                    <ul>\n                        {this.state.dropDownSelectedValue!=='select' && this.state.dropDownSelectedValue?\n                        this.createRadioList(this.props.vehicles)\n                        :null}\n                    </ul>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return ({\n        finalArray: state.finalArray\n    })\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return ({\n        updateFinalArray: data=>dispatch({type:'UPDATE_ARRAY', payload: data})\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDown);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport DropDown from '../DropDown/DropDown';\nimport Axios from 'axios';\nimport './main.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\n\nclass Main extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            vehicles: [],\n            planets: [],\n            dataHasBeenLoaded: false,\n            totalTime: null,\n            token: null,\n            showLoader: false\n        }\n    }\n\n    componentDidMount(){\n            // to fetch vehicles data\n            Axios.get('https://findfalcone.herokuapp.com/vehicles')\n            .then(value => {\n                this.props.initializeVehicles(value.data);\n                this.setState({\n                    ...this.state,\n                    vehicles: value.data\n                })\n            })\n            .catch(error => {\n                alert(error);\n            });\n\n            // to fetch planets data\n            Axios.get('https://findfalcone.herokuapp.com/planets')\n            .then(value => {\n                this.setState({\n                    ...this.state,\n                    planets: value.data,\n                    // dataHasBeenLoaded: true\n                })\n            })\n            .catch(error => {\n                alert(error);\n            });\n\n            // to retrieve token\n            Axios({\n                method: 'post',\n                url: 'https://findfalcone.herokuapp.com/token',\n                headers: {Accept: 'application/json'}\n            })\n            .then(value => {\n                this.setState({token: value.data.token, showLoader: false}) ;\n            })\n            .catch(error => {\n                alert(error);\n            })\n            setTimeout(()=>{\n                this.setState({dataHasBeenLoaded: true})\n            },3000);\n    }\n\n    calculateTime = (data) => {\n        let totalTime = 0;\n        for(let i=0;i<data.length;i++){\n            totalTime += data[i].distance/data[i].vehicle_speed;\n        }\n        this.setState({totalTime: totalTime})\n    }\n\n    onClick = ()=>{\n        let fArray = this.props.finalArray;\n        let vehicles = fArray.map(item =>{\n            return item.vehicle_name\n        });\n        let planets = fArray.map(item=>{\n            return item.planet_name\n        });\n        const config = {\n            method: 'post',\n            url: 'https://findfalcone.herokuapp.com/find',\n            headers: {Accept: 'application/json', 'Content-type': 'application/json'},\n            data: {\n                token: this.state.token,\n                planet_names: planets,\n                vehicle_names: vehicles\n            }\n        }\n        console.log('button clicked');\n        Axios(config)\n        .then(value=>{\n            console.log('final data', value);\n            this.props.getResult(value.data);\n        })\n        .catch(error =>{\n            console.log('ffff', error);\n        })\n        this.props.history.push('/result');\n    }\n\n    render() {\n        console.log('Apologies if you are here for the responsiveness!!');\n        return (\n            <div className='wrapper'>\n                <div className='body-container'> \n                        <div className='left-container'>\n                        {this.state.dataHasBeenLoaded?<>\n                        <div className='component-container'>\n                            <div className='drop-down-field-container'>\n                                <label>Destination 1</label>\n                                <DropDown calculateTime={this.calculateTime} name='dest-1' planets={this.state.planets} vehicles={this.state.vehicles}/>\n                            </div>\n                            <div className='drop-down-field-container'>\n                                <label>Destination 2</label>\n                                <DropDown calculateTime={this.calculateTime} name='dest-2' planets={this.state.planets} vehicles={this.state.vehicles}/>\n                            </div>\n                            <div className='drop-down-field-container'>\n                                <label>Destination 3</label>\n                                <DropDown calculateTime={this.calculateTime} name='dest-3' planets={this.state.planets} vehicles={this.state.vehicles}/>\n                            </div>\n                            <div className='drop-down-field-container'>\n                                <label>Destination 4</label>\n                                <DropDown calculateTime={this.calculateTime} name='dest-4' planets={this.state.planets} vehicles={this.state.vehicles}/>\n                            </div>\n                        </div>\n                        <div className='button-container'> \n                            <button type='button' disabled={this.props.finalArray.length!==4}  onClick={this.onClick}>Find Falcone</button>\n                        </div></>:<div className='loader-container'>\n                            <Loader\n                                type=\"Puff\"\n                                color=\"#00BFFF\"\n                                height={100}\n                                width={100}\n                                timeout={3000} //3 sec\n                            /></div>\n                            }\n                        </div>\n                    <div className='time-container'>\n                        <div className='time-container-content'>\n                            <h2>Total Time</h2>\n                            {this.state.totalTime?\n                            <h3>{this.state.totalTime} Sec</h3>:\n                            null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return ({\n        vehicles: state.vehicles,\n        finalArray: state.finalArray\n    })\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return ({\n        initializeVehicles: data=>{ dispatch({type:'INITIALIZE', payload: data})},\n        getResult: data=>{ dispatch({type: 'GET_RESULT', payload: data})}\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React, { Component } from 'react';\nimport './header.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\n\nclass Header extends Component {\n    constructor(props){\n        super(props);\n    }\n    onClick = () =>{\n        this.setState({\n            vehicles: [],\n            planets: [],\n            dataHasBeenLoaded: false,\n            totalTime: null,\n            token: null,\n            showLoader: false\n        });\n    }\n    render() {\n        return (\n            <>\n                 <div class=\"header\">\n                    <div class=\"header-container\">\n                        <nav>\n                            {/* <a onClick={this.onClick}>Home</a>\n                            <a onClick={this.onClick}>Reset</a> */}\n                        </nav>\n                       \n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport './footer.css';\n\nexport class Footer extends Component {\n    render() {\n        return (\n            <>\n                <div class=\"footer\">\n                    <div class=\"footer-container\">\n                        <div className='footer-content'>\n                            <p>@copyright: </p>\n                            <a href=\"https://akhils.space\">My Website</a>\n                            <p>Tel: +91 9791516477</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react';\nimport './result.css';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\n\nclass Result extends Component {\n    constructor(props){\n        super(props);\n    }\n    onClick = ()=>{\n        this.props.history.push('/');\n    }\n    render() {\n        //console.log('inside result', this.props);\n        return (\n        <>\n        <div className='loader-container'>\n                            <Loader\n                                type=\"Puff\"\n                                color=\"#00BFFF\"\n                                height={100}\n                                width={100}\n                                timeout={3000} //3 sec\n        />\n        <div className='wrapper'>\n                <div className='container'>\n                    <div className='content'>\n                        {this.props.resultData && this.props.resultData.status?\n                        <>\n                        <h2>Success! Congratulation on Finding Falcano, King shan will be happy!! 😁</h2>\n                        <p>Planet Found: {this.props.resultData.planet_name}</p>\n                        </>:\n                        <h2>You couldn't find queen, King will be angry 😑</h2>\n                        }\n                    </div>\n                    <div className='btn'>\n                        <button onClick={this.onClick}>Start Again</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n            \n        </>\n        )\n    }\n    componentDidMount = () =>{\n    \n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return ({\n        resultData: state.resultData\n    })\n}\n\n\nexport default connect(mapStateToProps)(Result);\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Result from './components/Result/Result';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Route exact path='/' component={Main} />\n        <Route exact path='/result' component={Result} />\n        <Footer />\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const state = {\n    vehicles: null,\n    finalArray: [],\n    resultData: null\n}\n\nconst myReducer = (iState=state, action)=>{\n    if(action.type==='INITIALIZE'){\n        return ({\n            ...iState,\n            vehicles: action.payload\n        })\n    }\n    if(action.type==='UPDATE_ARRAY'){\n        return ({\n            ...iState,\n            finalArray: action.payload\n        })\n    }\n    if(action.type==='GET_RESULT'){\n        return ({\n            ...iState,\n            resultData: action.payload\n        })\n    }\n    return iState;\n}\n\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport myReducer from './reducers/myReducer';\n\nconst store = createStore(myReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}